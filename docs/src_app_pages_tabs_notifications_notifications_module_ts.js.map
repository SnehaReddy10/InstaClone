{"version":3,"file":"src_app_pages_tabs_notifications_notifications_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEE;AAEzD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAiB;KAC7B;CACF,CAAC;IAMW,8BAA8B,SAA9B,8BAA8B;;AAA9B,8BAA8B;IAJ1C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,8BAA8B;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBF;AACM;AACF;AAEA;AAEmC;AAEvB;IAW5C,uBAAuB,SAAvB,uBAAuB;;AAAvB,uBAAuB;IATnC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yFAA8B;SAC/B;QACD,YAAY,EAAE,CAAC,kEAAiB,CAAC;KAClC,CAAC;GACW,uBAAuB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACnBc;AACH;AACe;IAOjD,iBAAiB,SAAjB,iBAAiB;IAG5B,YAAoB,OAAsB,EAAU,GAAe;QAA/C,YAAO,GAAP,OAAO,CAAe;QAAU,QAAG,GAAH,GAAG,CAAY;QACjE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,QAAQ,KAAI,CAAC;IAEb,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5C,CAAC;IAED,SAAS,CAAC,IAAI;QACZ,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAChC,gDAAgD;QAChD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,8CAA8C;IAChD,CAAC;IAED,aAAa,CAAC,IAAI;QAChB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACpC,8CAA8C;IAChD,CAAC;IAED,UAAU,CAAC,IAAI;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,gDAAgD;IAClD,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;;;;;;AArCU,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,0EAAwC;;KAEzC,CAAC;GACW,iBAAiB;AAAA","sources":["./src/app/pages/tabs/notifications/notifications-routing.module.ts","./src/app/pages/tabs/notifications/notifications.module.ts","./src/app/pages/tabs/notifications/notifications.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotificationsPage } from './notifications.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotificationsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NotificationsPageRoutingModule } from './notifications-routing.module';\r\n\r\nimport { NotificationsPage } from './notifications.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NotificationsPageRoutingModule\r\n  ],\r\n  declarations: [NotificationsPage]\r\n})\r\nexport class NotificationsPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { ApiService } from 'src/app/services/api/api.service';\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.page.html',\r\n  styleUrls: ['./notifications.page.scss'],\r\n})\r\nexport class NotificationsPage implements OnInit {\r\n  notifications: any;\r\n\r\n  constructor(private navCtrl: NavController, private api: ApiService) {\r\n    this.getNotifications();\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  openRequests() {\r\n    console.log('open request');\r\n    this.navCtrl.navigateForward('/follow-requests');\r\n    console.log('notifs', this.notifications);\r\n  }\r\n\r\n  addfriend(user) {\r\n    console.log('add friend', user);\r\n    // this.api.profile.followers.push(user.userId);\r\n    console.log(user.userId);\r\n    // this.api.profile.requests.pop(user.userId);\r\n  }\r\n\r\n  deleteRequest(user) {\r\n    console.log('delete request', user);\r\n    // this.api.profile.requests.pop(user.userId);\r\n  }\r\n\r\n  followUser(user) {\r\n    console.log(user);\r\n    // this.api.profile.following.push(user.userId);\r\n  }\r\n\r\n  getNotifications() {\r\n    this.api.getNotifications().then((x) => {\r\n      this.notifications = x;\r\n      console.log(x);\r\n    });\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}